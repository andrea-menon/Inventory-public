// <auto-generated />
using System;
using Inventory.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory.Migrations
{
    [DbContext(typeof(InventoryContext))]
    [Migration("20240531083407_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventory.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Car")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Inventory.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Inventory.Models.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CostCenters");
                });

            modelBuilder.Entity("Inventory.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Sn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ModelId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Inventory.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("Inventory.Models.Relation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("Inventory.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("Di")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Inventory.Models.Device", b =>
                {
                    b.HasOne("Inventory.Models.Account", "Account")
                        .WithMany("Devices")
                        .HasForeignKey("AccountId");

                    b.HasOne("Inventory.Models.Model", "Model")
                        .WithMany("Devices")
                        .HasForeignKey("ModelId");

                    b.Navigation("Account");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Inventory.Models.Model", b =>
                {
                    b.HasOne("Inventory.Models.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Inventory.Models.Relation", b =>
                {
                    b.HasOne("Inventory.Models.Device", "Device")
                        .WithMany("Relations")
                        .HasForeignKey("DeviceId");

                    b.HasOne("Inventory.Models.User", "User")
                        .WithMany("Relations")
                        .HasForeignKey("UserId");

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Inventory.Models.User", b =>
                {
                    b.HasOne("Inventory.Models.CostCenter", "CostCenter")
                        .WithMany("Users")
                        .HasForeignKey("CostCenterId");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("Inventory.Models.Account", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Inventory.Models.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("Inventory.Models.CostCenter", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Inventory.Models.Device", b =>
                {
                    b.Navigation("Relations");
                });

            modelBuilder.Entity("Inventory.Models.Model", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Inventory.Models.User", b =>
                {
                    b.Navigation("Relations");
                });
#pragma warning restore 612, 618
        }
    }
}
